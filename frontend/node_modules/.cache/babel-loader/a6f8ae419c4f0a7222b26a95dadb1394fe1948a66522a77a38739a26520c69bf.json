{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\DISEASE_PREDICTION\\\\frontend\\\\src\\\\components\\\\SymptomSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SymptomSelector({\n  symptoms,\n  selected,\n  setSelected\n}) {\n  _s();\n  const [filter, setFilter] = useState('');\n  const filtered = useMemo(() => {\n    if (!filter) return symptoms;\n    return symptoms.filter(s => s.toLowerCase().includes(filter.toLowerCase()));\n  }, [filter, symptoms]);\n  function toggle(symptom) {\n    if (selected.includes(symptom)) {\n      setSelected(selected.filter(s => s !== symptom));\n    } else {\n      setSelected([...selected, symptom]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filter symptoms...\",\n      value: filter,\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symptom-list\",\n      children: [filtered.map(sym => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `symptom-item ${selected.includes(sym) ? 'selected' : ''}`,\n        onClick: () => toggle(sym),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          readOnly: true,\n          checked: selected.includes(sym)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \" \", sym]\n      }, sym, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), filtered.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No symptoms match filter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomSelector, \"EkAdyl+glqgLkVwB82U2ZfOHr7s=\");\n_c = SymptomSelector;\nvar _c;\n$RefreshReg$(_c, \"SymptomSelector\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","SymptomSelector","symptoms","selected","setSelected","_s","filter","setFilter","filtered","s","toLowerCase","includes","toggle","symptom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","sym","onClick","readOnly","checked","length","_c","$RefreshReg$"],"sources":["C:/Users/prana/OneDrive/Desktop/DISEASE_PREDICTION/frontend/src/components/SymptomSelector.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\n\r\nexport default function SymptomSelector({ symptoms, selected, setSelected }) {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const filtered = useMemo(() => {\r\n    if (!filter) return symptoms;\r\n    return symptoms.filter(s => s.toLowerCase().includes(filter.toLowerCase()));\r\n  }, [filter, symptoms]);\r\n\r\n  function toggle(symptom) {\r\n    if (selected.includes(symptom)) {\r\n      setSelected(selected.filter(s => s !== symptom));\r\n    } else {\r\n      setSelected([...selected, symptom]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"symptom-selector\">\r\n      <label>Symptoms</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Filter symptoms...\"\r\n        value={filter}\r\n        onChange={e => setFilter(e.target.value)}\r\n      />\r\n      <div className=\"symptom-list\">\r\n        {filtered.map(sym => (\r\n          <div key={sym} className={`symptom-item ${selected.includes(sym) ? 'selected' : ''}`} onClick={() => toggle(sym)}>\r\n            <input type=\"checkbox\" readOnly checked={selected.includes(sym)} /> {sym}\r\n          </div>\r\n        ))}\r\n        {filtered.length === 0 && <div className=\"empty\">No symptoms match filter.</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,eAAeA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC3E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,QAAQ,GAAGV,OAAO,CAAC,MAAM;IAC7B,IAAI,CAACQ,MAAM,EAAE,OAAOJ,QAAQ;IAC5B,OAAOA,QAAQ,CAACI,MAAM,CAACG,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,MAAM,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;EAC7E,CAAC,EAAE,CAACJ,MAAM,EAAEJ,QAAQ,CAAC,CAAC;EAEtB,SAASU,MAAMA,CAACC,OAAO,EAAE;IACvB,IAAIV,QAAQ,CAACQ,QAAQ,CAACE,OAAO,CAAC,EAAE;MAC9BT,WAAW,CAACD,QAAQ,CAACG,MAAM,CAACG,CAAC,IAAIA,CAAC,KAAKI,OAAO,CAAC,CAAC;IAClD,CAAC,MAAM;MACLT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEU,OAAO,CAAC,CAAC;IACrC;EACF;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bf,OAAA;MAAAe,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEhB,MAAO;MACdiB,QAAQ,EAAEC,CAAC,IAAIjB,SAAS,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFnB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1BP,QAAQ,CAACkB,GAAG,CAACC,GAAG,iBACf3B,OAAA;QAAec,SAAS,EAAE,gBAAgBX,QAAQ,CAACQ,QAAQ,CAACgB,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QAACC,OAAO,EAAEA,CAAA,KAAMhB,MAAM,CAACe,GAAG,CAAE;QAAAZ,QAAA,gBAC/Gf,OAAA;UAAOoB,IAAI,EAAC,UAAU;UAACS,QAAQ;UAACC,OAAO,EAAE3B,QAAQ,CAACQ,QAAQ,CAACgB,GAAG;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,EAACQ,GAAG;MAAA,GADhEA,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN,CAAC,EACDX,QAAQ,CAACuB,MAAM,KAAK,CAAC,iBAAI/B,OAAA;QAAKc,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAnCuBJ,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}