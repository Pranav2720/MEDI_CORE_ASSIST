{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\DISEASE_PREDICTION\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport axios from 'axios';\nimport SymptomSelector from './components/SymptomSelector';\nimport PredictionResult from './components/PredictionResult';\nimport MetaBar from './components/MetaBar';\n\n// Use relative paths if no explicit REACT_APP_API_BASE provided (works with CRA proxy)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || '';\nfunction App() {\n  _s();\n  const [symptoms, setSymptoms] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [meta, setMeta] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const prefix = API_BASE ? `${API_BASE}` : '';\n        const [symRes, metaRes] = await Promise.all([axios.get(`${prefix}/api/symptoms`), axios.get(`${prefix}/api/metadata`)]);\n        setSymptoms(symRes.data.symptoms || []);\n        setMeta(metaRes.data);\n      } catch (e) {\n        var _e$response;\n        const status = (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status;\n        const msg = e.message || 'unknown error';\n        setError(`Failed to load initial data. ${status ? 'Status ' + status + '. ' : ''}Ensure backend is running. (${msg})`);\n      }\n    }\n    fetchData();\n  }, []);\n  const canPredict = useMemo(() => selected.length > 0, [selected]);\n  async function handlePredict() {\n    if (!canPredict) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const prefix = API_BASE ? `${API_BASE}` : '';\n      const res = await axios.post(`${prefix}/api/predict`, {\n        symptoms: selected\n      });\n      setResult(res.data);\n    } catch (e) {\n      var _e$response2, _e$response3, _e$response3$data;\n      const status = (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status;\n      setError(((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.error) || `Prediction failed${status ? ' (status ' + status + ')' : ''}: ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handleClear() {\n    setSelected([]);\n    setResult(null);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetaBar, {\n      meta: meta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SymptomSelector, {\n      symptoms: symptoms,\n      selected: selected,\n      setSelected: setSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !canPredict || loading,\n        onClick: handlePredict,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        type: \"button\",\n        disabled: loading && !result,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Predicting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), result && /*#__PURE__*/_jsxDEV(PredictionResult, {\n      data: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"Backend: \", API_BASE || 'proxy(/)', \" \", meta && `| Features: ${meta.n_features} | Classes: ${meta.n_classes}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d66kIdZLELktAcJc9SWsx2Vpoos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","axios","SymptomSelector","PredictionResult","MetaBar","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","App","_s","symptoms","setSymptoms","selected","setSelected","loading","setLoading","result","setResult","meta","setMeta","error","setError","fetchData","prefix","symRes","metaRes","Promise","all","get","data","e","_e$response","status","response","msg","message","canPredict","length","handlePredict","res","post","_e$response2","_e$response3","_e$response3$data","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","type","n_features","n_classes","_c","$RefreshReg$"],"sources":["C:/Users/prana/OneDrive/Desktop/DISEASE_PREDICTION/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport SymptomSelector from './components/SymptomSelector';\r\nimport PredictionResult from './components/PredictionResult';\r\nimport MetaBar from './components/MetaBar';\r\n\r\n// Use relative paths if no explicit REACT_APP_API_BASE provided (works with CRA proxy)\r\nconst API_BASE = process.env.REACT_APP_API_BASE || '';\r\n\r\nfunction App() {\r\n  const [symptoms, setSymptoms] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [meta, setMeta] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const prefix = API_BASE ? `${API_BASE}` : '';\r\n        const [symRes, metaRes] = await Promise.all([\r\n          axios.get(`${prefix}/api/symptoms`),\r\n          axios.get(`${prefix}/api/metadata`)\r\n        ]);\r\n        setSymptoms(symRes.data.symptoms || []);\r\n        setMeta(metaRes.data);\r\n      } catch (e) {\r\n        const status = e.response?.status;\r\n        const msg = e.message || 'unknown error';\r\n        setError(`Failed to load initial data. ${status ? 'Status ' + status + '. ' : ''}Ensure backend is running. (${msg})`);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const canPredict = useMemo(() => selected.length > 0, [selected]);\r\n\r\n  async function handlePredict() {\r\n    if (!canPredict) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n  const prefix = API_BASE ? `${API_BASE}` : '';\r\n  const res = await axios.post(`${prefix}/api/predict`, { symptoms: selected });\r\n      setResult(res.data);\r\n    } catch (e) {\r\n      const status = e.response?.status;\r\n      setError(e.response?.data?.error || `Prediction failed${status ? ' (status ' + status + ')' : ''}: ${e.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleClear() {\r\n    setSelected([]);\r\n    setResult(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Disease Prediction</h1>\r\n      <MetaBar meta={meta} />\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <SymptomSelector\r\n        symptoms={symptoms}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n      />\r\n      <div className=\"actions\">\r\n        <button disabled={!canPredict || loading} onClick={handlePredict}>Predict</button>\r\n        <button onClick={handleClear} type=\"button\" disabled={loading && !result}>Clear</button>\r\n      </div>\r\n      {loading && <div className=\"loading\">Predicting...</div>}\r\n      {result && <PredictionResult data={result} />}\r\n  <footer>Backend: {API_BASE || 'proxy(/)'} {meta && `| Features: ${meta.n_features} | Classes: ${meta.n_classes}`}</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}